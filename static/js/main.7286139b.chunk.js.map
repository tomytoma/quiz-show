{"version":3,"sources":["svg/logo.svg","routes/Home.js","routes/About.js","api/quizQuestions.js","components/Question.js","components/QuestionCount.js","components/AnswerOption.js","components/Quiz.js","components/Result.js","App.js","Show.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","Fragment","className","id","react_router_dom","to","src","About","quizQuestions","question","answers","type","content","Question","props","QuestionCount","counter","total","AnswerOption","name","checked","answerType","answer","value","disabled","onChange","onAnswerSelected","htmlFor","answerContent","Quiz","react_transition_group","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","key","questionId","components_QuestionCount","questionTotal","components_Question","answerOptions","map","components_AnswerOption","Result","quizResult","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","answersCount","result","handleAnswerSelected","bind","assertThisInitialized","_this2","shuffledAnswerOptions","shuffleArray","setState","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","event","_this3","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setResults","getResults","objectSpread","defineProperty","answersCountKeys","keys","answersCountValues","maxAnswerCount","max","apply","filter","components_Quiz","components_Result","logo","alt","renderResult","renderQuiz","Component","Show","react_router","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_Show","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7286139b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9e00aea3.svg\";","import React from 'react';\nimport './Home.css';\nimport { Link } from 'react-router-dom';\n// import script from './js/Confetti';\n\nfunction Home() {\n  return (\n    <>\n    <div className=\"box_stage\">\n      <div id=\"intro_wrapper\">\n        <div className=\"title\">JEI 경제 샐러드</div>\n          <div id=\"intro_button\">\n            <Link to=\"/app\">시작</Link>\n          </div>\n      </div>\n      <script src=\"./js/confetti.js\"></script>\n      <script>confetti.start(2100, 50, 100)</script>\n    </div>\n    </>\n  );\n};\n\nexport default Home;","import React from 'react';\n\nfunction About() {\n  return (\n    <span>\n      경제 성향 테스트: 재능교육 직장인을 위한 심플 교육 클래스\n    </span>\n  );\n}\n\nexport default About;","const quizQuestions = [\n  {\n      question: \"당신이 선호하는 투자는?\",\n      answers: [\n          {\n              type: \"채권\",\n              content: \"안정성 중시\"\n          },\n          {\n              type: \"주식\",\n              content: \"단기간 고수익\"\n          },\n          {\n              type: \"부동산\",\n              content: \"실물 자산\"\n          }\n      ]\n  },\n  {\n      question: \"투자를 진행할 때 고려하는 기간은?\",\n      answers: [\n          {\n              type: \"채권\",\n              content: \"최소 일년 이상\"\n          },\n          {\n              type: \"주식\",\n              content: \"일주일에서 한달\"\n          },\n          {\n              type: \"부동산\",\n              content: \"기간은 고려사항에서 후순위\"\n          }\n      ]\n  },\n  {\n      question: \"투자 금액 규모는?\",\n      answers: [\n          {\n              type: \"채권\",\n              content: \"5천만원 이상\"\n          },\n          {\n              type: \"주식\",\n              content: \"100만원 이상\"\n          },\n          {\n              type: \"부동산\",\n              content: \"1억원 이상\"\n          }\n      ]\n  },\n  {\n      question: \"평소 어떠한 분야의 경제 및 사회관련 뉴스를 보는가?\",\n      answers: [\n          {\n              type: \"채권\",\n              content: \"거시 경제와 인덱스 지표 관련 뉴스\"\n          },\n          {\n              type: \"주식\",\n              content: \"기업 관련 뉴스\"\n          },\n          {\n              type: \"부동산\",\n              content: \"주택 및 부동산, 정책 관련 뉴스\"\n          }\n      ]\n  },\n  {\n      question: \"2020년 8월, 미국 Fed의 제로금리 유지 정책에 가장 큰 영향을 주는 분야는?\",\n      answers: [\n          {\n              type: \"채권\",\n              content: \"채권\"\n          },\n          {\n              type: \"주식\",\n              content: \"주식\"\n          },\n          {\n              type: \"부동산\",\n              content: \"부동산\"\n          }\n      ]\n  }\n];\n\nexport default quizQuestions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Question(props) {\n  return <h2 className=\"question\">{props.content}</h2>;\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired\n};\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction QuestionCount(props) {\n  return (\n    <div className=\"questionCount\">\n      질문 <span>{props.counter}</span> / <span>{props.total}</span>\n    </div>\n  );\n}\n\nQuestionCount.propTypes = {\n  counter: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};\n\nexport default QuestionCount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  return (\n    <li className=\"answerOption\">\n      <input\n        type=\"radio\"\n        className=\"radioCustomButton\"\n        name=\"radioGroup\"\n        checked={props.answerType === props.answer}\n        id={props.answerType}\n        value={props.answerType}\n        disabled={props.answer}\n        onChange={props.onAnswerSelected}\n      />\n      <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\n        {props.answerContent}\n      </label>\n    </li>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerType: PropTypes.string.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default AnswerOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.content}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={props.answer}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={300}\n      transitionLeaveTimeout={300}\n      transitionAppear\n      transitionAppearTimeout={300}\n    >\n      <div key={props.questionId} className=\"App-content\">\n        <QuestionCount counter={props.questionId} total={props.questionTotal} />\n        <Question content={props.question} />\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport { Link } from 'react-router-dom';\n\nfunction Result(props) {\n  return (\n    <CSSTransitionGroup\n      className=\"container result\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={300}\n      transitionLeaveTimeout={200}\n      transitionAppear\n      transitionAppearTimeout={200}\n    >\n      <div className=\"result_contents\">\n        <p>당신이 선호하는 투자 분야는 <strong>{props.quizResult}</strong>입니다</p>\n      </div>\n      <div id=\"intro_button\">\n            <Link to=\"/\">리셋</Link>\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nResult.propTypes = {\n  quizResult: PropTypes.string.isRequired\n};\n\nexport default Result;\n","import React, { Component } from 'react';\nimport quizQuestions from './api/quizQuestions';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\nimport logo from './svg/logo.svg';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {},\n      result: ''\n    };\n\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  componentDidMount() {\n    const shuffledAnswerOptions = quizQuestions.map(question =>\n      this.shuffleArray(question.answers)\n    );\n    this.setState({\n      question: quizQuestions[0].question,\n      answerOptions: shuffledAnswerOptions[0]\n    });\n  }\n\n  shuffleArray(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // shuffle해야 될 요소가 남아 있는 상태...\n    while (0 !== currentIndex) {\n      // 나머지 요소 선택...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // 현재의 요소로 변경.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  handleAnswerSelected(event) {\n    this.setUserAnswer(event.currentTarget.value);\n\n    if (this.state.questionId < quizQuestions.length) {\n      setTimeout(() => this.setNextQuestion(), 300);\n    } else {\n      setTimeout(() => this.setResults(this.getResults()), 300);\n    }\n  }\n\n  setUserAnswer(answer) {\n    this.setState((state) => ({\n      answersCount: {\n        ...state.answersCount,\n        [answer]: (state.answersCount[answer] || 0) + 1\n      },\n      answer: answer\n    }));\n  }\n\n  setNextQuestion() {\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      question: quizQuestions[counter].question,\n      answerOptions: quizQuestions[counter].answers,\n      answer: ''\n    });\n  }\n\n  getResults() {\n    const answersCount = this.state.answersCount;\n    const answersCountKeys = Object.keys(answersCount);\n    const answersCountValues = answersCountKeys.map(key => answersCount[key]);\n    const maxAnswerCount = Math.max.apply(null, answersCountValues);\n\n    return answersCountKeys.filter(key => answersCount[key] === maxAnswerCount);\n  }\n\n  setResults(result) {\n    if (result.length === 1) {\n      this.setState({ result: result[0] });\n    } else {\n      this.setState({ result: '조금 더 고민이 필요한 상태' });\n    }\n  }\n\n  renderQuiz() {\n    return (\n      <Quiz\n        answer={this.state.answer}\n        answerOptions={this.state.answerOptions}\n        questionId={this.state.questionId}\n        question={this.state.question}\n        questionTotal={quizQuestions.length}\n        onAnswerSelected={this.handleAnswerSelected}\n      />\n    );\n  }\n\n  renderResult() {\n    return <Result quizResult={this.state.result} />;\n  }\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h2>JEI 경제 샐러드 | 투자퀴즈 </h2>\n        </div>\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n\n\n\n// import React from 'react';\n// import Home from './routes/Home';\n\n// function App() {\n//   return <Home />;\n// }\n\n// export default App;","import React from 'react';\n// import App from './App';\nimport './Show.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Home from './routes/Home';\nimport About from './routes/About';\nimport App from './App';\n\nfunction Show() {\n  // return <App />;\n  return (\n    <HashRouter>\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/app\" component={App} />\n    </HashRouter>\n  );\n}\n\nexport default Show;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Show from './Show';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Show />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}